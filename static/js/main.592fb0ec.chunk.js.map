{"version":3,"sources":["logo.svg","components/dbhelper/constants.js","components/dbhelper/methods.js","components/Loading.js","components/atoms/searchResultsBlocks.js","components/ContentSearchBook.js","components/ContentLogin.js","components/atoms/myAppointmentBlocks.js","components/ContentShowMyAppointment.js","components/atoms/allAppointmentsBlocks.js","components/ContentAppointmentManage.js","components/atoms/modifyBookInfoBlocks.js","components/ContentBookManagement.js","components/ContentRegister.js","components/atoms/myBorrowsBlocks.js","components/ContentShowMyBorrow.js","routers.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","REQUEST_URL","handleGetPromise","URL","Promise","resolve","reject","req","XMLHttpRequest","open","responseType","mode","setRequestHeader","localStorage","getItem","onload","status","Error","statusText","onerror","send","handlePostJson","data","fetch","method","body","JSON","stringify","headers","then","res","json","handleDeleteJSON","handlePutJSON","Loading","props","state","height","width","this","style","src","process","alt","React","Component","SearchResultsBlocks","isLoading","bookid","bookname","bookauthor","bookisbn","bookstatus","showModal","message","details","setState","response","author","ISBN","apointid","Button","variant","onClick","handleMakeAppoint","bind","Fragment","Modal","show","Header","Body","Footer","bsStyle","onClickconfirmOk","renderButtonForStatus","ContentSearchbook","isSearch","result","noresult","length","map","booksinfo","key","prveState","e","target","value","Table","responsive","index","className","Form","Group","controlId","Label","Control","onChange","handleOnchangeKeyword","type","placeholder","handleSearch","renderResult","ContentLogin","username","password","usertype","isLogin","postdata","respone","setItem","token","window","location","href","handleOnchangeUsername","handleOnchangePassword","handleOnchangeUsertype","as","handleLogin","onHide","handleClose","closeButton","Title","MyAppointmentBlock","appointment","console","log","succeed","handleDeleteAppoint","startdatearryymmdd","apointdate","split","startdate","Date","parseInt","setDate","getDate","startdatestr","getFullYear","getMonth","enddatearryymmdd","deadline","enddate","enddatestr","renderAction","ContentShowMyAppointment","appintments","hasResult","AllAppointmentsBlock","handleConfirm","normaluserid","ContentAppointmentManager","appointments","ModifyBookInfoBlock","isbn","handleModifyBook","handleDeleteBook","handleOnchangeName","handleOnchangAuthor","handleOnchangeISBN","ContentBookManagement","keyword","showAlert","Tabs","defaultActiveKey","transition","id","Tab","eventKey","title","handleOnchangeBookName","handleOnchangeAuthor","handleUpload","Alert","ContentRegister","confirmpwd","isRegister","alertMsg","handleOnchangeConfirmPwd","handleRegister","MyBorrowsBlock","borrow","borrowdate","returndate","borrowid","ContentShowMyBorrows","borrows","rootPath","routes","path","component","ContentSearchBook","exact","breadcrumbName","NavBar","Navbar","fixed","bg","expand","Toggle","aria-controls","Collapse","Nav","to","Link","handleLogout","App","renderRoutes","Boolean","hostname","match","initialState","contentData","userid","otherid","store","createStore","action","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.592fb0ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const REQUEST_URL = 'https://backendapi.sloli.xyz'\r\n","export function handleGetPromise(URL){\r\n    return new Promise(function (resolve, reject) {\r\n      var req = new XMLHttpRequest();\r\n      req.open('GET', URL, true);\r\n      req.responseType = \"json\";\r\n      req.mode = \"cors\";\r\n      req.setRequestHeader(\"Accept\", \"application/json\");\r\n      if(localStorage.getItem(\"logintoken\")!=null){\r\n        req.setRequestHeader(\"Authorization\",\"Bearer \"+localStorage.getItem(\"logintoken\"));\r\n      }else{\r\n        req.setRequestHeader(\"Authorization\",\"Bearer invalidtoken\");\r\n      }\r\n      \r\n      req.onload = function () {\r\n          if (req.status === 200) {\r\n              resolve(req);\r\n          } else {\r\n              reject(new Error(req.statusText));\r\n          }\r\n      };\r\n      req.onerror = function () {\r\n          reject(new Error(req.statusText));\r\n      };\r\n      req.send();\r\n    });\r\n  }\r\n  /*wait to be tested*/\r\n  export function handlePostPromise(URL,data){\r\n    return new Promise(function (resolve, reject) {\r\n      var req = new XMLHttpRequest();\r\n      req.open('POST', URL, true);\r\n      req.responseType = \"json\";\r\n      req.mode = \"cors\";\r\n      req.setRequestHeader(\"Accept\", \"application/json\");\r\n      req.onload = function (){\r\n        if(req.status === 200){\r\n          resolve(req);\r\n        } else {\r\n          reject(new Error(req.statusText));\r\n        }\r\n      };\r\n      req.onerror = function (){\r\n        reject(new Error(req.statusText));\r\n      };\r\n      req.send(data);\r\n    });\r\n  }\r\n  //\r\n  export function handlePostJson(URL,data){\r\n    return fetch(URL,{\r\n      method:'POST',\r\n      mode: 'cors',\r\n      body: JSON.stringify(data),\r\n      headers:{\r\n        'Content-Type': 'application/json',\r\n        'Authorization':\"Bearer \"+localStorage.getItem(\"logintoken\")\r\n      }\r\n    }).then(\r\n      function(res){\r\n        return res.json();\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  export function handleDeleteJSON(URL,data){\r\n    return fetch(URL,{\r\n      method:'DELETE',\r\n      mode:'cors',\r\n      body: JSON.stringify(data),\r\n      headers:{\r\n        'Content-Type': 'application/json',\r\n        'Authorization':\"Bearer \"+localStorage.getItem(\"logintoken\")\r\n      }\r\n    }).then(\r\n      function(res){\r\n        return res.json();\r\n      }\r\n    )\r\n  }\r\n\r\n  export function handlePutJSON(URL,data){\r\n    return fetch(URL,{\r\n      method:'PUT',\r\n      mode:'cors',\r\n      body: JSON.stringify(data),\r\n      headers:{\r\n        'Content-Type': 'application/json',\r\n        'Authorization':\"Bearer \"+localStorage.getItem(\"logintoken\")\r\n      }\r\n    }).then(\r\n      function(res){\r\n        return res.json();\r\n      }\r\n    )\r\n  }\r\n  ","import React from 'react';\r\nclass Loading extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      height: props.height || \"\",\r\n      width: props.width || \"\",\r\n    }\r\n  }\r\n  render(){\r\n    var height = this.state.height\r\n    var width = this.state.width\r\n    return(\r\n      <img style={{height:height,width:width}} src={process.env.PUBLIC_URL + \"/images/loading.gif\"} alt=\"loading\"/>\r\n    );\r\n  }\r\n}\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { REQUEST_URL } from '../dbhelper/constants';\r\nimport { handleGetPromise,handlePostJson } from '../dbhelper/methods';\r\nimport Loading from '../Loading.js';\r\n\r\nclass SearchResultsBlocks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            bookid: props.bookid,\r\n            bookname: \"\",\r\n            bookauthor: \"\",\r\n            bookisbn: \"\",\r\n            bookstatus: \"\",\r\n            showModal:false,\r\n            message:\"please wait...\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        var getBooksDetail = handleGetPromise(REQUEST_URL + `/books/${this.state.bookid}`);\r\n        getBooksDetail.then((details) => {\r\n            this.setState({\r\n                bookname: details.response.bookname,\r\n                bookauthor: details.response.author,\r\n                bookisbn: details.response.ISBN,\r\n                bookstatus: details.response.status,\r\n                isLoading: false,\r\n            });\r\n        });\r\n    }\r\n    handleMakeAppoint(){\r\n        this.setState({\r\n            showModal:true,\r\n        });\r\n        var makeAppointment = handlePostJson(REQUEST_URL+`/userbooking/make`,{bookid:this.state.bookid});\r\n        makeAppointment.then((data)=>{\r\n            if(data.apointid){\r\n                this.setState({\r\n                    message:\"appointed succeed, please collect the book in 7 days.\",\r\n                    bookstatus:\"appointed\",\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    renderButtonForStatus() {\r\n        if (this.state.bookstatus != \"available\") {\r\n            return <Button variant=\"link\">{this.state.bookstatus}</Button>\r\n        } else {\r\n            return <Button variant=\"primary\" onClick={this.handleMakeAppoint.bind(this)}>appoint it</Button>\r\n        }\r\n    }\r\n\r\n    onClickconfirmOk(){\r\n        this.setState({\r\n            showModal:false,\r\n        });\r\n    }\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return <Loading />\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Modal show={this.state.showModal}>\r\n                        <Modal.Header></Modal.Header>\r\n                        <Modal.Body>\r\n                            {this.state.message}\r\n                    </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button bsStyle=\"danger\" onClick={this.onClickconfirmOk.bind(this)}>{\"ok\"}</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <tr>\r\n                        <td>{this.state.bookid}</td>\r\n                        <td>{this.state.bookname}</td>\r\n                        <td>{this.state.bookauthor}</td>\r\n                        <td>{this.state.bookisbn}</td>\r\n                        <td>{this.renderButtonForStatus()}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default SearchResultsBlocks;","import React from \"react\";\r\nimport { Form, Button, Table } from 'react-bootstrap';\r\nimport { REQUEST_URL } from './dbhelper/constants';\r\nimport { handleGetPromise } from './dbhelper/methods';\r\nimport Loading from './Loading'\r\nimport SearchResultsBlocaks from './atoms/searchResultsBlocks';\r\nimport \"../css/contentBorder.css\";\r\n\r\nclass ContentSearchbook extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            bookname: '',\r\n            isSearch:false,\r\n            result: [],//bookid inside,\r\n            noresult:false,\r\n        }\r\n    }\r\n\r\n    handleSearch() {\r\n        this.setState({\r\n            isLoading: true,\r\n            result:[],\r\n        });\r\n        var searchBook = handleGetPromise(REQUEST_URL + `/books?keyword=${this.state.bookname}`);\r\n\r\n        searchBook.then((res) => {\r\n\r\n            if (res.response.length > 0) {\r\n                res.response.map((booksinfo, key) => {\r\n                    this.setState(prveState=>({\r\n                        result: [...prveState.result,booksinfo.bookid]\r\n                    }))\r\n                });\r\n                this.setState({\r\n                    isLoading: false,\r\n                    isSearch:true,\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    isLoading:false,\r\n                    noresult:true,\r\n                    isSearch:false,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleOnchangeKeyword(e) {\r\n        this.setState({\r\n            bookname: e.target.value,\r\n        });\r\n    }\r\n\r\n    renderResult() {\r\n        if (this.state.isLoading) {\r\n            return (<Loading />)\r\n        } else if(this.state.isSearch) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Table responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Book Name</th>\r\n                                <th>Book Author</th>\r\n                                <th>Book ISBN</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.result.map((data, index) => {\r\n                                return (<SearchResultsBlocaks bookid={data} key={index}/>)\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </React.Fragment>\r\n            );\r\n        }else if(this.state.noresult){\r\n            return <p>no result found. sorry.</p>\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"contentBorder\">\r\n                    <Form>\r\n                        <Form.Group controlId=\"search\">\r\n                            <Form.Label>Search Books</Form.Label>\r\n                            <Form.Control onChange={this.handleOnchangeKeyword.bind(this)} type=\"text\" placeholder=\"Enter keyword\" />\r\n\r\n                        </Form.Group>\r\n                        <Button onClick={this.handleSearch.bind(this)} variant=\"primary\">\r\n                            Search\r\n                        </Button>\r\n                    </Form>\r\n                    {this.renderResult()}\r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContentSearchbook;","import React from \"react\";\r\nimport { Form, Button, Modal } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { REQUEST_URL } from './dbhelper/constants';\r\nimport { handlePostJson } from './dbhelper/methods';\r\nimport Loading from './Loading'\r\nimport \"../css/contentBorder.css\";\r\nconst rootPath = process.env.PUBLIC_URL;\r\n\r\nclass ContentLogin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            usertype: \"normaluser\",\r\n            isLoading: false,\r\n            isLogin: false,\r\n            message: \"Please wait...\"\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleOnchangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value,\r\n        });\r\n    }\r\n    handleOnchangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value,\r\n        });\r\n    }\r\n    handleOnchangeUsertype(e) {\r\n        this.setState({\r\n            usertype: e.target.value\r\n        });\r\n    }\r\n    handleLogin(e) {\r\n\r\n        const postdata = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n        }\r\n\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n        if (this.state.usertype == \"normaluser\") {\r\n\r\n            var loginNormaluser = handlePostJson(REQUEST_URL + `/login`, postdata);\r\n            loginNormaluser.then((respone) => {\r\n                if (respone.length == 1) {\r\n\r\n                    localStorage.setItem(\"logintoken\", respone[0].token);\r\n                    this.setState({\r\n\r\n                        message: \"Login succeed, welcome.\",\r\n                        isLogin:true,\r\n                    });\r\n\r\n\r\n                } else {\r\n                    this.setState({\r\n                        message: \"password incorrect\",\r\n                        \r\n                    })\r\n                }\r\n            })\r\n\r\n        } else if (this.state.usertype == \"manager\") {\r\n            var loginManager = handlePostJson(REQUEST_URL + `/login/manager`, postdata);\r\n            loginManager.then((respone) => {\r\n                if (respone.length == 1) {\r\n\r\n                    localStorage.setItem(\"logintoken\", respone[0].token);\r\n                    this.setState({\r\n\r\n                        message: \"Login succeed, welcome.\",\r\n                        isLogin:true,\r\n                    });\r\n\r\n                } else {\r\n                    this.setState({\r\n                        message: \"password incorrect\",\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            isLoading: false,\r\n        });\r\n        if (this.state.isLogin) {\r\n            window.location.href = `${rootPath}/`;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"contentBorder\">\r\n                    <Form>\r\n                        <Form.Group controlId=\"username\">\r\n                            <Form.Label>Email:</Form.Label>\r\n                            <Form.Control onChange={this.handleOnchangeUsername.bind(this)} type=\"email\" placeholder=\"Enter email\" />\r\n\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label>Password:</Form.Label>\r\n                            <Form.Control onChange={this.handleOnchangePassword.bind(this)} type=\"password\" />\r\n\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"usertype\">\r\n                            <Form.Label>user type:</Form.Label>\r\n                            <Form.Control onChange={this.handleOnchangeUsertype.bind(this)} as=\"select\">\r\n                                <option value=\"normaluser\">user</option>\r\n                                <option value=\"manager\">manager</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Button onClick={this.handleLogin.bind(this)} variant=\"primary\">\r\n                            Login\r\n                    </Button>\r\n                    </Form>\r\n                </div>\r\n                <Modal show={this.state.isLoading} onHide={this.handleClose.bind(this)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Notice</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{this.state.message}</Modal.Body>\r\n                    <Modal.Footer>\r\n\r\n                        <Button variant=\"primary\" onClick={this.handleClose.bind(this)}>\r\n                            OK\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ContentLogin;","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { REQUEST_URL } from '../dbhelper/constants';\r\nimport { handleDeleteJSON } from '../dbhelper/methods';\r\nimport Loading from '../Loading.js';\r\n\r\nclass MyAppointmentBlock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            appointment: props.appointment,\r\n            message:\"deleteing....\",\r\n            showModal:false,\r\n        }\r\n    }\r\n\r\n    handleDeleteAppoint(){\r\n        const postdata = {\r\n            bookid:this.state.appointment.bookid,\r\n        }\r\n        console.log(postdata);\r\n        this.setState({\r\n            showModal:true,\r\n        });\r\n        var deleteAppointment = handleDeleteJSON(REQUEST_URL+`/userbooking/${this.state.appointment.apointid}`,postdata);\r\n        deleteAppointment.then((data)=>{\r\n            if(data.succeed){\r\n                this.setState({\r\n                    message:\"succeed delete this appointment.\"\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    message:\"something error, please try again.\"\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onClickconfirmOk(){\r\n        this.setState({\r\n            showModal:false,\r\n        })\r\n    }\r\n    renderAction(){\r\n        return(\r\n            <Button variant=\"danger\" onClick={this.handleDeleteAppoint.bind(this)}>delete</Button>\r\n        );\r\n    }\r\n    render() {\r\n        const { appointment } = this.state;\r\n        \r\n        //start date format\r\n        var startdatearr = appointment.apointdate.split(\"T\");\r\n        var startdatearryymmdd = startdatearr[0].split(\"-\");\r\n        let startdate = new Date(startdatearryymmdd[0],parseInt(startdatearryymmdd[1])-1,startdatearryymmdd[2]);\r\n        startdate.setDate(startdate.getDate()+1);\r\n        let startdatestr = startdate.getFullYear()+\"-\"+(startdate.getMonth()+1) +\"-\"+ startdate.getDate();\r\n        //deadline format\r\n        var enddatearr = appointment.deadline.split(\"T\");\r\n        var enddatearryymmdd = enddatearr[0].split(\"-\");\r\n        let enddate = new Date(enddatearryymmdd[0],parseInt(enddatearryymmdd[1])-1,enddatearryymmdd[2]);\r\n        enddate.setDate(enddate.getDate()+1);\r\n        let enddatestr = enddate.getFullYear()+\"-\"+(enddate.getMonth()+1) +\"-\"+ enddate.getDate();\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <tr>\r\n                <td>{appointment.apointid}</td>\r\n                <td>{appointment.bookname}</td>\r\n                <td>{appointment.author}</td>\r\n                <td>{appointment.ISBN}</td>\r\n                <td>{startdatestr}</td>\r\n                <td>{enddatestr}</td>\r\n                <td>{this.renderAction()}</td>\r\n                </tr>\r\n            \r\n                <Modal show={this.state.showModal}>\r\n                        <Modal.Header></Modal.Header>\r\n                        <Modal.Body>\r\n                            {this.state.message}\r\n                    </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button bsStyle=\"danger\" onClick={this.onClickconfirmOk.bind(this)}>{\"ok\"}</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyAppointmentBlock;","import React from 'react';\r\nimport { Modal, Button, Table } from 'react-bootstrap';\r\nimport { REQUEST_URL } from './dbhelper/constants';\r\nimport { handleGetPromise,handlePostJson } from './dbhelper/methods';\r\nimport Loading from './Loading.js';\r\nimport MyAppointmentBlock from './atoms/myAppointmentBlocks';\r\n\r\nclass ContentShowMyAppointment extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isLoading:true,\r\n            appintments:[],\r\n            hasResult:false,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        var getMyAppointment = handleGetPromise(REQUEST_URL+`/userbooking`);\r\n        getMyAppointment.then((response)=>{\r\n            if(response.response.length>0){\r\n                console.log(response.response)\r\n                response.response.map((appointment)=>{\r\n                    this.setState(prveState=>({\r\n                        appintments:[...prveState.appintments, appointment],\r\n                    }));\r\n                })\r\n                this.setState({\r\n                    isLoading:false,\r\n                    hasResult:true,\r\n                })\r\n            }else{//no appointments\r\n                this.setState({\r\n                    isLoading:false,\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoading){\r\n            return (<Loading />)\r\n        }else{\r\n            if(this.state.hasResult){\r\n                return (\r\n                    <Table responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Book name:</th>\r\n                                <th>Author:</th>\r\n                                <th>ISBN:</th>\r\n                                <th>Appointed from:</th>\r\n                                <th>Final Collect Date:</th>\r\n                                <th>Action:</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.appintments.map((data,index)=>{\r\n                                return(<MyAppointmentBlock appointment={data} key={index}/>);\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                )\r\n            }else{\r\n                return(<p>no result</p>);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentShowMyAppointment;","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { REQUEST_URL } from '../dbhelper/constants';\r\nimport { handlePutJSON } from '../dbhelper/methods';\r\nimport Loading from '../Loading.js';\r\n\r\nclass AllAppointmentsBlock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            appointment: props.appointment,\r\n            message:\"confirming....\",\r\n            showModal:false,\r\n            status: props.appointment.status,\r\n        }\r\n    }\r\n\r\n    handleConfirm(){\r\n        \r\n        \r\n        this.setState({\r\n            showModal:true,\r\n        });\r\n        var confirmBorrow = handlePutJSON(REQUEST_URL+`/appointments/confirm/${this.state.appointment.apointid}`);\r\n        confirmBorrow.then((data)=>{\r\n            if(data.succeed){\r\n                this.setState({\r\n                    message:\"succeed confirm this appointment, book status changed to borrowed.\",\r\n                    status:\"collected\",\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    message:\"something error, please try again.\"\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onClickconfirmOk(){\r\n        this.setState({\r\n            showModal:false,\r\n        })\r\n    }\r\n    renderAction(){\r\n        if(this.state.status!=\"collected\"){\r\n            return(\r\n                <Button variant=\"primary\" onClick={this.handleConfirm.bind(this)}>Confirm</Button>\r\n            );\r\n        }else{\r\n            return(\r\n                <Button variant=\"link\">collected</Button>\r\n            )\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        const { appointment } = this.state;\r\n        \r\n        //start date format\r\n        var startdatearr = appointment.apointdate.split(\"T\");\r\n        var startdatearryymmdd = startdatearr[0].split(\"-\");\r\n        let startdate = new Date(startdatearryymmdd[0],parseInt(startdatearryymmdd[1])-1,startdatearryymmdd[2]);\r\n        startdate.setDate(startdate.getDate()+1);\r\n        let startdatestr = startdate.getFullYear()+\"-\"+(startdate.getMonth()+1) +\"-\"+ startdate.getDate();\r\n        //deadline format\r\n        var enddatearr = appointment.deadline.split(\"T\");\r\n        var enddatearryymmdd = enddatearr[0].split(\"-\");\r\n        let enddate = new Date(enddatearryymmdd[0],parseInt(enddatearryymmdd[1])-1,enddatearryymmdd[2]);\r\n        enddate.setDate(enddate.getDate()+1);\r\n        let enddatestr = enddate.getFullYear()+\"-\"+(enddate.getMonth()+1) +\"-\"+ enddate.getDate();\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <tr>\r\n                <td>{appointment.apointid}</td>\r\n                <td>{appointment.bookname}</td>\r\n                <td>{appointment.normaluserid}</td>\r\n                <td>{startdatestr}</td>\r\n                <td>{enddatestr}</td>\r\n                <td>{this.renderAction()}</td>\r\n                </tr>\r\n            \r\n                <Modal show={this.state.showModal}>\r\n                        <Modal.Header></Modal.Header>\r\n                        <Modal.Body>\r\n                            {this.state.message}\r\n                    </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button bsStyle=\"danger\" onClick={this.onClickconfirmOk.bind(this)}>{\"ok\"}</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllAppointmentsBlock;","import React from 'react';\r\nimport { Modal, Button, Table } from 'react-bootstrap';\r\nimport { REQUEST_URL } from './dbhelper/constants';\r\nimport { handleGetPromise,handlePostJson } from './dbhelper/methods';\r\nimport Loading from './Loading.js';\r\nimport AllAppointmentsBlock from './atoms/allAppointmentsBlocks';\r\n\r\nclass ContentAppointmentManager extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isLoading:true,\r\n            appointments:[],\r\n            hasResult:false,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        var getAllAppointments = handleGetPromise(REQUEST_URL+`/appointments`);\r\n        getAllAppointments.then((data)=>{\r\n            if(data.response.length>0){\r\n                data.response.map((appointment)=>{\r\n                    this.setState(prveState=>({\r\n                        appointments:[...prveState.appointments, appointment],\r\n                    }));\r\n                });\r\n                this.setState({\r\n                    isLoading:false,\r\n                    hasResult:true,\r\n                })\r\n                \r\n            }else{\r\n                this.setState({\r\n                    isLoading:false,\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoading){\r\n            return (<Loading />)\r\n        }else{\r\n            if(this.state.hasResult){\r\n                return (\r\n                    <Table responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Book name:</th>\r\n                                <th>Student id:</th>\r\n                                <th>Appointed from:</th>\r\n                                <th>Final Collect Date:</th>\r\n                                <th>Action:</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.appointments.map((data,index)=>{\r\n                                return(<AllAppointmentsBlock appointment={data} key={index}/>);\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                )\r\n            }else{\r\n                return(<p>no result</p>);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentAppointmentManager;","import React from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { REQUEST_URL } from '../dbhelper/constants';\r\nimport { handleGetPromise,handlePutJSON, handleDeleteJSON } from '../dbhelper/methods';\r\nimport Loading from '../Loading.js';\r\n\r\nclass ModifyBookInfoBlock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            bookid: props.bookid,\r\n            bookname: \"\",\r\n            bookauthor: \"\",\r\n            bookisbn: \"\",\r\n            bookstatus: \"\",\r\n            showModal:false,\r\n            message:\"please wait...\"\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        var getBooksDetail = handleGetPromise(REQUEST_URL + `/books/${this.state.bookid}`);\r\n        getBooksDetail.then((details) => {\r\n            this.setState({\r\n                bookname: details.response.bookname,\r\n                bookauthor: details.response.author,\r\n                bookisbn: details.response.ISBN,\r\n                bookstatus: details.response.status,\r\n                isLoading: false,\r\n            });\r\n        });\r\n    }\r\n\r\n    handleOnchangeName(e){\r\n        this.setState({\r\n            bookname:e.target.value\r\n        });\r\n    }\r\n\r\n    handleOnchangAuthor(e){\r\n        this.setState({\r\n            bookauthor:e.target.value\r\n        });\r\n    }\r\n    \r\n    handleOnchangeISBN(e){\r\n        this.setState({\r\n            bookisbn:e.target.value\r\n        });\r\n    }\r\n    handleModifyBook(){\r\n        const postdata={\r\n            bookname:this.state.bookname,\r\n            author:this.state.bookauthor,\r\n            isbn:this.state.bookisbn,\r\n        }\r\n        this.setState({\r\n            showModal:true,\r\n        });\r\n        \r\n        var modifyBookInfo = handlePutJSON(REQUEST_URL+`/managebooks/${this.state.bookid}`,postdata);\r\n        modifyBookInfo.then((data)=>{\r\n            if(data.succeed){\r\n                this.setState({\r\n                    message:\"modify succeed.\",\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    message:\"Something error.\",\r\n                })\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    handleDeleteBook(){\r\n        this.setState({\r\n            showModal:true,\r\n        });\r\n        var deleteBook = handleDeleteJSON(REQUEST_URL+`/managebooks/${this.state.bookid}`);\r\n        deleteBook.then((data)=>{\r\n            if(data.succeed){\r\n                this.setState({\r\n                    message:\"delete book succeed.\",\r\n                });\r\n                \r\n            }else{\r\n                this.setState({\r\n                    message:\"Something error.\",\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    renderButtonForStatus() {\r\n        \r\n            return (\r\n            <React.Fragment>\r\n            <Button variant=\"primary\" onClick={this.handleModifyBook.bind(this)}>Modify</Button>\r\n            <Button variant=\"danger\" onClick={this.handleDeleteBook.bind(this)}>Delete</Button>\r\n            </React.Fragment>\r\n            );\r\n        \r\n    }\r\n\r\n    onClickconfirmOk(){\r\n        this.setState({\r\n            showModal:false,\r\n            \r\n        });\r\n        \r\n    }\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return <Loading />\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Modal show={this.state.showModal}>\r\n                        <Modal.Header></Modal.Header>\r\n                        <Modal.Body>\r\n                            {this.state.message}\r\n                    </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"danger\" onClick={this.onClickconfirmOk.bind(this)}>{\"ok\"}</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <tr>\r\n                        <td>{this.state.bookid}</td>\r\n                        <td>\r\n                            <Form.Group>\r\n                                <Form.Control type=\"text\" onChange={this.handleOnchangeName.bind(this)} value={this.state.bookname}></Form.Control>\r\n                            </Form.Group>\r\n                        </td>\r\n                        <td>\r\n                            <Form.Group>\r\n                                <Form.Control type=\"text\" onChange={this.handleOnchangAuthor.bind(this)} value={this.state.bookauthor}></Form.Control>\r\n                            </Form.Group>\r\n                        </td>\r\n                        <td>\r\n                            <Form.Group>\r\n                                <Form.Control type=\"number\" onChange={this.handleOnchangeISBN.bind(this)} value={this.state.bookisbn}></Form.Control>\r\n                            </Form.Group>\r\n                        </td>\r\n                        <td>{this.renderButtonForStatus()}</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default ModifyBookInfoBlock;","import React from 'react';\r\nimport { Modal,Table, Alert, Button, Form, Tabs, Tab } from 'react-bootstrap';\r\nimport { REQUEST_URL } from './dbhelper/constants';\r\nimport { handleGetPromise, handlePostJson } from './dbhelper/methods';\r\nimport Loading from './Loading.js';\r\nimport ModifyBookInfoBlock from './atoms/modifyBookInfoBlocks';\r\n\r\n\r\nclass ContentBookManagement extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bookname: \"\",\r\n            author: \"\",\r\n            isbn: \"\",\r\n            keyword:\"\",\r\n            result:[],\r\n            showAlert: false,\r\n            showModal: false,\r\n            isLoading:false,\r\n            message:\"uploading....\",\r\n        }\r\n\r\n    }\r\n\r\n    handleOnchangeBookName(e) {\r\n        this.setState({\r\n            bookname: e.target.value,\r\n        })\r\n    }\r\n    handleOnchangeAuthor(e) {\r\n        this.setState({\r\n            author: e.target.value,\r\n        })\r\n    }\r\n    handleOnchangeISBN(e) {\r\n        this.setState({\r\n            isbn: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleOnchangeKeyword(e){\r\n        this.setState({\r\n            keyword: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleUpload() {\r\n        const { bookname, author, isbn } = this.state;\r\n        const postdata = {\r\n            bookname:bookname,\r\n            author:author,\r\n            isbn:isbn,\r\n        }\r\n        if (bookname == \"\" || author == \"\" || isbn == \"\"){\r\n            this.setState({\r\n                showAlert:true,\r\n            });\r\n        }else{\r\n            this.setState({\r\n                showModal:true,\r\n            })\r\n            var uploadBook = handlePostJson(REQUEST_URL+`/managebooks/upload`,postdata);\r\n            uploadBook.then((data)=>{\r\n                if(data.succeed){\r\n                    this.setState({\r\n                        message:\"succeed upload a new book.\"\r\n                    })\r\n                }else{\r\n                    this.setState({\r\n                        message:\"something error, please try again.\"\r\n                    });\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSearch(){\r\n        this.setState({\r\n            isLoading: true,\r\n            result:[],\r\n        });\r\n        var searchBook = handleGetPromise(REQUEST_URL + `/books?keyword=${this.state.keyword}`);\r\n\r\n        searchBook.then((res) => {\r\n\r\n            if (res.response.length > 0) {\r\n                res.response.map((booksinfo, key) => {\r\n                    this.setState(prveState=>({\r\n                        result: [...prveState.result,booksinfo.bookid]\r\n                    }))\r\n                });\r\n                this.setState({\r\n                    isLoading: false,\r\n                    isSearch:true,\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    isLoading:false,\r\n                    noresult:true,\r\n                    isSearch:false,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    renderResult() {\r\n        if (this.state.isLoading) {\r\n            return (<Loading />)\r\n        } else if(this.state.isSearch) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Table responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Book Name</th>\r\n                                <th>Book Author</th>\r\n                                <th>Book ISBN</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.result.map((data, index) => {\r\n                                return (<ModifyBookInfoBlock bookid={data} key={index}/>)\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </React.Fragment>\r\n            );\r\n        }else if(this.state.noresult){\r\n            return <p>no result found. sorry.</p>\r\n        }\r\n    }\r\n    onClickconfirmOk(){\r\n        this.setState({\r\n            showModal:false,\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Tabs defaultActiveKey={\"uploadbook\"} transition={false} id=\"uncontrolled-tab-example\">\r\n                    <Tab eventKey=\"uploadbook\" title=\"Upload new book\">\r\n                        <Form>\r\n                            <Form.Group controlId=\"bookname\">\r\n                                <Form.Label>Book Name:</Form.Label>\r\n                                <Form.Control onChange={this.handleOnchangeBookName.bind(this)} type=\"text\" placeholder=\"Enter book name\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"bookauthor\">\r\n                                <Form.Label>Book Author:</Form.Label>\r\n                                <Form.Control onChange={this.handleOnchangeAuthor.bind(this)} type=\"text\" placeholder=\"Enter author\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"ISBN\">\r\n                                <Form.Label>Book ISBN:</Form.Label>\r\n                                <Form.Control onChange={this.handleOnchangeISBN.bind(this)} type=\"number\" placeholder=\"Enter ISBN\" />\r\n                            </Form.Group>\r\n                        </Form>\r\n                        <Button variant=\"primary\" onClick={this.handleUpload.bind(this)}>upload</Button>\r\n                        <Alert show={this.state.showAlert} variant=\"danger\">something empty. </Alert>\r\n                    </Tab>\r\n                    <Tab eventKey=\"modifybook\" title=\"Book info modification\">\r\n                    <Form>\r\n                        <Form.Group controlId=\"search\">\r\n                            <Form.Label>Search Books</Form.Label>\r\n                            <Form.Control onChange={this.handleOnchangeKeyword.bind(this)} type=\"text\" placeholder=\"Enter keyword\" />\r\n\r\n                        </Form.Group>\r\n                        <Button onClick={this.handleSearch.bind(this)} variant=\"primary\">\r\n                            Search\r\n                        </Button>\r\n                    </Form>\r\n                    {this.renderResult()}\r\n                    </Tab>\r\n                    \r\n                </Tabs>\r\n\r\n                <Modal show={this.state.showModal}>\r\n                        <Modal.Header></Modal.Header>\r\n                        <Modal.Body>\r\n                            {this.state.message}\r\n                    </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button bsStyle=\"danger\" onClick={this.onClickconfirmOk.bind(this)}>{\"ok\"}</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContentBookManagement;","import React from \"react\";\r\nimport { Form, Button, Alert, Modal } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { REQUEST_URL } from './dbhelper/constants';\r\nimport { handlePostJson } from './dbhelper/methods';\r\nimport Loading from './Loading'\r\nimport \"../css/contentBorder.css\";\r\nconst rootPath = process.env.PUBLIC_URL;\r\nclass ContentRegister extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            confirmpwd: \"\",\r\n            isLoading: false,\r\n            isRegister: false,\r\n            showAlert: false,\r\n            alertMsg: \"something empty.\",\r\n            message: \"Please wait...\"\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleOnchangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value,\r\n        });\r\n    }\r\n    handleOnchangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value,\r\n        });\r\n    }\r\n    handleOnchangeConfirmPwd(e) {\r\n        this.setState({\r\n            confirmpwd: e.target.value\r\n        });\r\n    }\r\n    handleRegister(e) {\r\n        this.setState({\r\n            isLoading: true,\r\n        })\r\n        const { username, password, confirmpwd } = this.state;\r\n        if (username == \"\" || password == \"\" || confirmpwd == \"\") {\r\n            this.setState({\r\n                showAlert: true,\r\n                isLoading: false,\r\n            });\r\n        } else if (password != confirmpwd) {\r\n            this.setState({\r\n                showAlert: true,\r\n                isLoading: false,\r\n                alertMsg: \"password no match, pleas check again.\"\r\n            });\r\n        }else{\r\n            const postdata = {\r\n                username:this.state.username,\r\n                password:this.state.password,\r\n            }\r\n            var registerAccount = handlePostJson(REQUEST_URL+`/register`, postdata);\r\n            registerAccount.then((data)=>{\r\n                if(data.succeed){\r\n                    this.setState({\r\n                        message:\"register succeed.\",\r\n                        isRegister:true,\r\n                        \r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            isLoading: false,\r\n        });\r\n        if (this.state.isRegister) {\r\n            window.location.href = `${rootPath}/login`;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"contentBorder\">\r\n                    <Form>\r\n                        <Form.Group controlId=\"username\">\r\n                            <Form.Label>Email:</Form.Label>\r\n                            <Form.Control onChange={this.handleOnchangeUsername.bind(this)} type=\"email\" placeholder=\"Enter email\" />\r\n\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label>Password:</Form.Label>\r\n                            <Form.Control onChange={this.handleOnchangePassword.bind(this)} type=\"password\" />\r\n\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"confirmpwd\">\r\n                            <Form.Label>Confirm password:</Form.Label>\r\n                            <Form.Control onChange={this.handleOnchangeConfirmPwd.bind(this)} type=\"password\">\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Button onClick={this.handleRegister.bind(this)} variant=\"primary\">\r\n                            Register\r\n                    </Button>\r\n                    <Alert variant=\"danger\" show={this.state.showAlert} >{this.state.alertMsg}</Alert>\r\n                    </Form>\r\n                    \r\n                </div>\r\n                <Modal show={this.state.isLoading} onHide={this.handleClose.bind(this)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Notice</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{this.state.message}</Modal.Body>\r\n                    <Modal.Footer>\r\n\r\n                        <Button variant=\"primary\" onClick={this.handleClose.bind(this)}>\r\n                            OK\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ContentRegister;","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { REQUEST_URL } from '../dbhelper/constants';\r\nimport { handleDeleteJSON } from '../dbhelper/methods';\r\nimport Loading from '../Loading.js';\r\n\r\nclass MyBorrowsBlock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            borrow: props.borrow,\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const { borrow } = this.state;\r\n        \r\n        //start date format\r\n        var startdatearr = borrow.borrowdate.split(\"T\");\r\n        var startdatearryymmdd = startdatearr[0].split(\"-\");\r\n        let startdate = new Date(startdatearryymmdd[0],parseInt(startdatearryymmdd[1])-1,startdatearryymmdd[2]);\r\n        startdate.setDate(startdate.getDate()+1);\r\n        let startdatestr = startdate.getFullYear()+\"-\"+(startdate.getMonth()+1) +\"-\"+ startdate.getDate();\r\n        //deadline format\r\n        var enddatearr = borrow.returndate.split(\"T\");\r\n        var enddatearryymmdd = enddatearr[0].split(\"-\");\r\n        let enddate = new Date(enddatearryymmdd[0],parseInt(enddatearryymmdd[1])-1,enddatearryymmdd[2]);\r\n        enddate.setDate(enddate.getDate()+1);\r\n        let enddatestr = enddate.getFullYear()+\"-\"+(enddate.getMonth()+1) +\"-\"+ enddate.getDate();\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <tr>\r\n                <td>{borrow.borrowid}</td>\r\n                <td>{borrow.bookname}</td>\r\n                <td>{borrow.author}</td>\r\n                <td>{borrow.ISBN}</td>\r\n                <td>{startdatestr}</td>\r\n                <td>{enddatestr}</td>\r\n                \r\n                </tr>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyBorrowsBlock;","import React from 'react';\r\nimport { Modal, Button, Table } from 'react-bootstrap';\r\nimport { REQUEST_URL } from './dbhelper/constants';\r\nimport { handleGetPromise,handlePostJson } from './dbhelper/methods';\r\nimport Loading from './Loading.js';\r\nimport MyBorrowsBlock from './atoms/myBorrowsBlocks';\r\n\r\nclass ContentShowMyBorrows extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isLoading:true,\r\n            borrows:[],\r\n            hasResult:false,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        var getMyBorrows = handleGetPromise(REQUEST_URL+`/borrow`);\r\n        getMyBorrows.then((response)=>{\r\n            if(response.response.length>0){\r\n                console.log(response.response)\r\n                response.response.map((borrow)=>{\r\n                    this.setState(prveState=>({\r\n                        borrows:[...prveState.borrows, borrow],\r\n                    }));\r\n                })\r\n                this.setState({\r\n                    isLoading:false,\r\n                    hasResult:true,\r\n                })\r\n            }else{//no borrows\r\n                this.setState({\r\n                    isLoading:false,\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoading){\r\n            return (<Loading />)\r\n        }else{\r\n            if(this.state.hasResult){\r\n                return (\r\n                    <Table responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Book name:</th>\r\n                                <th>Author:</th>\r\n                                <th>ISBN:</th>\r\n                                <th>Borrowed on:</th>\r\n                                <th>Should return by:</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.borrows.map((data,index)=>{\r\n                                return(<MyBorrowsBlock borrow={data} key={index}/>);\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                )\r\n            }else{\r\n                return(<p>no result</p>);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentShowMyBorrows;","import ContentSearchBook from \"./components/ContentSearchBook\";\r\nimport ContentLogin from \"./components/ContentLogin\";\r\nimport ContentShowMyAppointment from \"./components/ContentShowMyAppointment\";\r\nimport ContentAppointmentManager from \"./components/ContentAppointmentManage\";\r\nimport ContentBookManagement from \"./components/ContentBookManagement\";\r\nimport ContentRegister from \"./components/ContentRegister\";\r\nimport ContentShowMyBorrows from \"./components/ContentShowMyBorrow\";\r\nconst rootPath = process.env.PUBLIC_URL;\r\n\r\nconst routes = [\r\n  {\r\n    path: `${rootPath}/`,\r\n    component: ContentSearchBook,\r\n    exact: true,\r\n    breadcrumbName: 'Home'\r\n  },\r\n  {\r\n    path: `${rootPath}/login`,\r\n    component: ContentLogin,\r\n    breadcrumbName: 'Login'\r\n  },\r\n  {\r\n    path: `${rootPath}/myappointment`,\r\n    component: ContentShowMyAppointment,\r\n    breadcrumbName: 'My appointments'\r\n  },\r\n  {\r\n    path: `${rootPath}/allAppointments`,\r\n    component: ContentAppointmentManager,\r\n    breadcrumbName: 'All appointments'\r\n  },\r\n  {\r\n    path: `${rootPath}/bookmanagement`,\r\n    component: ContentBookManagement,\r\n    breadcrumbName: 'Books management'\r\n  },\r\n  {\r\n    path: `${rootPath}/register`,\r\n    component: ContentRegister,\r\n    breadcrumbName: 'Register'\r\n  },\r\n  {\r\n    path: `${rootPath}/myborrow`,\r\n    component: ContentShowMyBorrows,\r\n    breadcrumbName: 'My Borrows'\r\n  }\r\n];\r\n\r\nexport default routes;\r\nexport { rootPath };","import React from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport routes, { rootPath } from '../routers';\r\nimport {handlePostJson} from './dbhelper/methods';\r\nimport {REQUEST_URL} from './dbhelper/constants';\r\nclass NavBar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isLogin:false,\r\n            usertype:'customer',\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        var checkLogin = handlePostJson(REQUEST_URL+`/login/check`);\r\n        checkLogin.then((data)=>{\r\n            this.setState({\r\n                isLogin:data.isLogin,\r\n                \r\n            });\r\n            if(data.usertype){\r\n                this.setState({\r\n                    usertype:data.usertype,\r\n                });\r\n            }\r\n        });\r\n    }\r\n    handleLogout(){\r\n        localStorage.setItem(\"logintoken\",\"\")\r\n        window.location.href = `${rootPath}/login`;\r\n    }\r\n\r\n    render(){\r\n        const {usertype} = this.state;\r\n        if(usertype == \"customer\"){\r\n            return (\r\n                <Navbar fixed=\"top\" bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse  id=\"basic-navbar-nav\">\r\n                    <Nav>\r\n                        <LinkContainer to={`${rootPath}/`}>\r\n                        <Nav.Link>Home</Nav.Link>\r\n                        </LinkContainer>\r\n                        \r\n                        <LinkContainer to={`${rootPath}/register`}>\r\n                        <Nav.Link>Register</Nav.Link>\r\n                        </LinkContainer>\r\n                        <LinkContainer to={`${rootPath}/login`}>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                        </LinkContainer>\r\n                    </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n    \r\n            );\r\n    \r\n        }else if(usertype==\"normaluser\"){\r\n            return(\r\n            <Navbar fixed=\"top\" bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse  id=\"basic-navbar-nav\">\r\n            <Nav>\r\n                <LinkContainer to={`${rootPath}/`}>\r\n                <Nav.Link>Home</Nav.Link>\r\n                </LinkContainer>\r\n                \r\n                <LinkContainer to={`${rootPath}/myappointment`}>\r\n                <Nav.Link>My Appointment</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer to={`${rootPath}/myborrow`}>\r\n                <Nav.Link>My Borrow</Nav.Link>\r\n                </LinkContainer>\r\n                \r\n                <Nav.Link onClick={this.handleLogout.bind(this)}>Logout</Nav.Link>\r\n                \r\n            </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n            );\r\n        }else if(usertype==\"manager\"){\r\n            return(\r\n            <Navbar fixed=\"top\" bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse  id=\"basic-navbar-nav\">\r\n            <Nav>\r\n                <LinkContainer to={`${rootPath}/`}>\r\n                <Nav.Link>Home</Nav.Link>\r\n                </LinkContainer>\r\n                \r\n                <LinkContainer to={`${rootPath}/allAppointments`}>\r\n                <Nav.Link>Appointments</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer to={`${rootPath}/bookmanagement`}>\r\n                <Nav.Link>Book management</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer to={`${rootPath}/logout`}>\r\n                <Nav.Link onClick={this.handleLogout.bind(this)}>Logout</Nav.Link>\r\n                </LinkContainer>\r\n            </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n            );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default NavBar","import React from 'react';\nimport logo from './logo.svg';\nimport { renderRoutes } from 'react-router-config';\nimport {useHistory} from 'react-router-dom';\nimport routes from './routers';\nimport NavBar from './components/Navbar';\nimport './App.css';\n\n\nconst rootPath = process.env.PUBLIC_URL;\nclass App extends React.Component {\n   \n  constructor(props) {\n    super(props);\n    \n  }\n\n  render() {\n    let style = {\n      containerstyle:{\n        \"padding-top\":\"10vh\",\n        \"padding-left\":\"5vw\",\n        \"padding-right\":\"5vw\",\n      }\n    }\n    return (\n      <React.Fragment>\n        <NavBar />\n        <div style={style.containerstyle}>\n        {renderRoutes(routes)}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n// redux-logger is a middleware that lets you log every state change\nimport logger from 'redux-logger';\n\n// redux-thunk is a middleware that lets you dispatch async actions\nimport thunk from 'redux-thunk';\nimport { createStore } from 'redux';\nimport * as serviceWorker from './serviceWorker';\nconst initialState = {\n  contentData: <React.Fragment>test</React.Fragment>,\n  isLogin: false,\n  userid: null,\n  otherid: -1,\n  usertype: \"unknown\"\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case 'setIsLogin':\n      return {\n        isLogin: action.isLogin\n      };\n    default:\n      return state;\n  }\n\n}\nconst store = createStore(reducer);\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}